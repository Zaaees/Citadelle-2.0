import discord
from discord.ext import commands
import json
import asyncio
from datetime import datetime

class ElementSelect(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="Terre", value="Terre", emoji="üåç"),
            discord.SelectOption(label="Feu", value="Feu", emoji="üî•"),
            discord.SelectOption(label="Vent", value="Vent", emoji="üí®"),
            discord.SelectOption(label="Eau", value="Eau", emoji="üíß"),
            discord.SelectOption(label="Espace", value="Espace", emoji="üåå")
        ]
        super().__init__(placeholder="Choisir un √©l√©ment", options=options, min_values=1, max_values=1)

class SousElementView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(ElementSelect())

class Souselement2(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.element_channels = {
            "Terre": 1137675703630970891,
            "Eau": 1137675658609303552,
            "Vent": 1137675592125399122,
            "Feu": 1137675742499573861,
            "Espace": 1137675462076796949
        }
        self.forum_id = 1137670941820846150

    @commands.command()
    async def creersouselement(self, ctx):
        """Cr√©e un nouveau sous-√©l√©ment"""
        # V√©rifier si l'utilisateur est dans un salon appropri√©
        if isinstance(ctx.channel, discord.DMChannel):
            return await ctx.send("Cette commande doit √™tre utilis√©e dans un serveur.")

        questions = [
            "Quel est le nom du sous-√©l√©ment ?",
            "Quelle est la description scientifique du sous-√©l√©ment ?",
            "Quel est le nom de l'√©motion associ√©e ?",
            "Quelle est la description de l'√©motion ?",
            "Qui a d√©couvert ce sous-√©l√©ment ? (Mentionnez le joueur)"
        ]

        reponses = []
        view = SousElementView()
        await ctx.send("Choisissez l'√©l√©ment principal:", view=view)
        
        try:
            interaction = await self.bot.wait_for(
                "select_option",
                timeout=60.0,
                check=lambda i: i.user == ctx.author
            )
            element_principal = interaction.values[0]
        except asyncio.TimeoutError:
            return await ctx.send("Temps √©coul√©. Veuillez r√©essayer.")

        for question in questions:
            await ctx.send(question)
            try:
                reponse = await self.bot.wait_for(
                    "message",
                    timeout=300.0,
                    check=lambda m: m.author == ctx.author and m.channel == ctx.channel
                )
                reponses.append(reponse.content)
            except asyncio.TimeoutError:
                return await ctx.send("Temps √©coul√©. Veuillez r√©essayer.")

        # Cr√©ation de l'embed
        embed = discord.Embed(
            title=f"Nouveau sous-√©l√©ment : {reponses[0]}",
            color=discord.Color.blue()
        )
        embed.add_field(name="√âl√©ment principal", value=element_principal, inline=False)
        embed.add_field(name="Description scientifique", value=reponses[1], inline=False)
        embed.add_field(name="√âmotion", value=reponses[2], inline=False)
        embed.add_field(name="Description de l'√©motion", value=reponses[3], inline=False)
        embed.add_field(name="D√©couvert par", value=reponses[4], inline=False)
        embed.add_field(name="Utilis√© par", value="Personne pour le moment", inline=False)

        # Envoyer dans le fil appropri√©
        channel = self.bot.get_channel(self.element_channels[element_principal])
        if channel:
            await channel.send(embed=embed)
            await ctx.send("Sous-√©l√©ment cr√©√© avec succ√®s!")

    @commands.command()
    async def fichesouselement(self, ctx):
        """Cr√©e une fiche de sous-√©l√©ments pour un utilisateur"""
        embed = discord.Embed(
            title=f"Fiche de sous-√©l√©ments de {ctx.author.name}",
            description="Utilisez les boutons pour ajouter des sous-√©l√©ments √† votre fiche.",
            color=discord.Color.green()
        )
        
        for element in ["Terre", "Feu", "Vent", "Eau", "Espace"]:
            embed.add_field(name=element, value="Aucun sous-√©l√©ment", inline=False)

        await ctx.send(embed=embed)

async def setup(bot):
    await bot.add_cog(Souselement2(bot))
